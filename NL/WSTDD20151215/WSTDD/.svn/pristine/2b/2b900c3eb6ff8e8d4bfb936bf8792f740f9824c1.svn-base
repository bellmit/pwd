/**
 * 
 */
package com.newland.wstdd.originate.search;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import android.content.Intent;
import android.os.Bundle;
import android.os.Message;
import android.support.v4.app.FragmentActivity;
import android.support.v4.app.FragmentManager;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.ListView;
import android.widget.TextView;

import com.newland.wstdd.R;
import com.newland.wstdd.common.base.BaseFragmentActivity;
import com.newland.wstdd.common.common.AppContext;
import com.newland.wstdd.common.resultlisterer.OnPostListenerInterface;
import com.newland.wstdd.common.tools.SharedPreferencesUtil;
import com.newland.wstdd.common.tools.StringUtil;
import com.newland.wstdd.common.tools.UiHelper;
import com.newland.wstdd.login.RetMsg;
import com.newland.wstdd.login.beanrequest.RegistFirstReq;
import com.newland.wstdd.login.beanresponse.RegistFirstRes;
import com.newland.wstdd.login.handle.RegistFragmentHandle;
import com.newland.wstdd.netutils.BaseMessageMgr;
import com.newland.wstdd.netutils.HandleNetMessageMgr;
import com.newland.wstdd.originate.beanrequest.OriginateSearchReq;
import com.newland.wstdd.originate.beanresponse.OriginateSearchRes;
import com.newland.wstdd.originate.handle.OriginateSearchHandle;

/**
 * 发起--搜索界面
 * 
 * @author H81 2015-11-2
 * 
 */
public class OriginateSearchActivity extends BaseFragmentActivity implements OnPostListenerInterface{

	private EditText moriginate_search_edt;//搜索框
	private ImageView moriginate_search_iv;
	private TextView moriginate_cancel_tv;//取消

	private FragmentManager fragmentManager;
	private AppContext appContext;
	
	//保存搜索记录
	SharedPreferencesUtil sharedPreferencesUtil ;
	//用于保存搜索记录
	List<HashMap<String, String>> datasList = new ArrayList<HashMap<String,String>>();
	private int index = 1;
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_originate_search);
		appContext = AppContext.getAppContext();
		sharedPreferencesUtil = new SharedPreferencesUtil(getApplicationContext());
//		String string = sharedPreferencesUtil.getPreferences().get("historyindex");
//		if(StringUtil.isNotEmpty(sharedPreferencesUtil.getPreferences().get("historyindex"))){
//			index=Integer.valueOf(sharedPreferencesUtil.getPreferences().get("historyindex"));
//		}
		datasList = sharedPreferencesUtil.getInfo(getApplicationContext(), "searchhistory");
		if (datasList.size()>0) {
			index =datasList.size();
		}else {
			index = 0;
		}
		fragmentManager = getSupportFragmentManager();
		initView();
		appContext.replaceFragment(fragmentManager, R.id.search_fragment, new OriginateSearchHistoryFragment(OriginateSearchActivity.this));
	}

	public void initView() {
		moriginate_search_edt = (EditText) findViewById(R.id.originate_search_edt);
		moriginate_search_iv = (ImageView) findViewById(R.id.originagte_search_iv);	
		moriginate_cancel_tv = (TextView) findViewById(R.id.originate_cancel_tv);
		moriginate_search_iv.setOnClickListener(this);
		moriginate_cancel_tv.setOnClickListener(this);

	}

	@Override
	public void onClick(View v) {
		switch (v.getId()) {
		case R.id.originate_cancel_tv:
			finish();
			break;
		case R.id.originagte_search_iv:
//			set.add(moriginate_search_edt.getText().toString());
			HashMap<String, String> map = new HashMap<String, String>();
			if(StringUtil.isNotEmpty(moriginate_search_edt.getText().toString())){
				index++;
				map.put("historyitem"+index, moriginate_search_edt.getText().toString());
				datasList.add(map);
				sharedPreferencesUtil.saveComment("historyindex", index+"");
				sharedPreferencesUtil.saveInfo(getApplicationContext(), "searchhistory",datasList);
			}
			System.out.println("index------------"+index);
			appContext.replaceFragment(fragmentManager, R.id.search_fragment, new OriginateSearchResultFragment(OriginateSearchActivity.this));
		default:
			break;
		}
		
	}


	@Override
	protected void processMessage(Message msg) {
		
	}

	@Override
	public void refresh() {
		
	}

	@Override
	public void OnHandleResultListener(Object obj, int responseId) {
		
	}

	@Override
	public void OnFailResultListener(String mess) {if (dialog != null) {dialog.dismiss();}
		
	}

}
